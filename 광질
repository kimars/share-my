var players = {};
var minerals = [
    "돌", "석탄", "구리", "철", "은", "금", "백금", "다이아몬드", "에메랄드", "루비", "사파이어", "흑옥", "자수정", 
    "토파즈", "오팔", "가넷", "페리도트", "아쿠아마린", "tanzanite", "alexandrite", "morganite", "spinel", 
    "kunzite", "zircon", "tourmaline", "iolite", "chrysoberyl", "benitoite", "padparadscha", "paraiba tourmaline", 
    "red beryl", "taaffeite", "painite", "grandidierite", "jeremejevite", "chambersite", "bixbite", "poudretteite", 
    "serendibite", "musgravite", "red diamond", "미스릴", "아다만타이트", "룬", "드래곤스톤"
];

var tools = [
    "나무 곡괭이", "돌 곡괭이", "구리 곡괭이", "철 곡괭이", "은 곡괭이", "금 곡괭이", 
    "백금 곡괭이", "다이아몬드 곡괭이", "에메랄드 곡괭이", "루비 곡괭이",
    "사파이어 곡괭이","미스릴 곡괭이","아다만타이트 곡괭이","룬 곡괭이","드래곤스톤 곡괭이"
];

var toolCosts = [10, 50, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 500000, 1000000, 2000000];

function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {
    var command = msg.toLowerCase().split(" ")[0];
    var args = msg.toLowerCase().split(" ").slice(1);
    
    switch(command) {
        case "!시작":
            initPlayer(sender);
            replier.reply(sender + "님, 광질 게임을 시작합니다!");
            showStatus(sender, replier);
            break;
        case "!광질":
            mine(sender, replier);
            break;
        case "!상태":
            showStatus(sender, replier);
            break;
        case "!업그레이드":
            upgradeTool(sender, replier);
            break;
        case "!판매":
            if (args[0] === "모두") {
                sellAllMinerals(sender, replier);
            } else {
                sellMinerals(sender, args[0], args[1], replier);
            }
            break;
        case "!랭킹":
            showRanking(replier);
            break;
        case "!광물목록":
            showMineralList(replier);
            break;
        case "!도구목록":
            showToolList(replier);
            break;
        case "!일일보상":
            dailyReward(sender, replier);
            break;
        case "!탐험":
            explore(sender, replier);
            break;
        case "!제작":
            craft(sender, args.join(" "), replier);
            break;
        case "!퀘스트":
            showQuests(sender, replier);
            break;
        case "!도움말":
            showHelp(replier);
            break;
    }
}

function initPlayer(name) {
    if (!players[name]) {
        players[name] = {
            minerals: new Array(minerals.length).fill(0),
            toolLevel: 0,
            money: 100,
            experience: 0,
            lastDaily: null,
            miningPower: 1,
            miningSpeed: 1,
            luck: 1,
            completedQuests: []
        };
    }
}

function mine(name, replier) {
    if (!players[name]) {
        replier.reply(name + "님, 먼저 !시작 명령어로 게임을 시작해주세요.");
        return;
    }
    
    var player = players[name];
    var mineResult = "";
    var expGained = 0;
    
    for (var i = 0; i <= player.toolLevel + 3; i++) {
        if (Math.random() < 0.1 * player.miningPower * player.luck / (i + 1)) {
            var amount = Math.floor(Math.random() * (player.toolLevel + 3) * player.miningPower) + 1;
            player.minerals[i] += amount;
            mineResult += minerals[i] + " " + amount + "개, ";
            expGained += amount * (i + 1);
        }
    }
    
    player.experience += expGained;
    
    if (mineResult === "") {
        replier.reply(name + "님, 아무것도 찾지 못했습니다. 다시 시도해보세요!");
    } else {
        replier.reply(name + "님이 광물을 캤습니다!\n" + mineResult.slice(0, -2) + "\n경험치: "+ expGained + "");
    }
}

function showStatus(name, replier) {
    if (!players[name]) {
        replier.reply(name + "님, 먼저 !시작 명령어로 게임을 시작해주세요.");
        return;
    }
    
    var player = players[name];
    var status = name + '님의 상태\n';
    status += '도구: ' + tools[player.toolLevel] + '\n';
    status += '돈: $' + player.money.toLocaleString() + '\n';
    status += '경험치: ' + player.experience.toLocaleString() + '\n';
    status += '채굴력: ' + player.miningPower.toFixed(1) + '\n';
    status += '채굴 속도: ' + player.miningSpeed.toFixed(1) + '\n';
    status += '행운: ' + player.luck.toFixed(1) + '\n';
    status += '보유 광물 (상위 5개):\n';
    
    var sortedMinerals = player.minerals
        .map(function(amount, index) { return {name: minerals[index], amount: amount}; })
        .filter(function(m) { return m.amount > 0; })
        .sort(function(a, b) { return b.amount - a.amount; });
    
    for (var i = 0; i < Math.min(5, sortedMinerals.length); i++) {
        status += sortedMinerals[i].name + ': ' + sortedMinerals[i].amount + '개\n';
    }
    
    replier.reply(status);
}

function upgradeTool(name, replier) {
    if (!players[name]) {
        replier.reply(name + '님, 먼저 !시작 명령어로 게임을 시작해주세요.');
        return;
    }
    
    var player = players[name];
    
    if (player.toolLevel >= tools.length - 1) {
        replier.reply(name + '님, 이미 최고 레벨의 도구를 사용 중입니다.');
        return;
    }
    
    var cost = toolCosts[player.toolLevel + 1];
    
    if (player.money >= cost) {
        player.money -= cost;
        player.toolLevel++;
        
        player.miningPower += 0.5;
        player.miningSpeed += 0.2;
        player.luck += 0.1;
        
        replier.reply(name + '님, 도구를 ' + tools[player.toolLevel] +
                      '(으)로 업그레이드했습니다! (비용: $' +
                      cost.toLocaleString() +
                      ')\n채굴력과 속도 및 행운이 증가했습니다!');
                      
    } else {
        replier.reply(name + '님, 업그레이드에 필요한 돈이 부족합니다. (필요: $' +
                      cost.toLocaleString() +
                      ')');
    }
}

function sellMinerals(name, mineralName, amountStr, replier) {
    if (!players[name]) {
        replier.reply(name + '님, 먼저 !시작 명령어로 게임을 시작해주세요.');
        return;
    }

    var player = players[name];
    
    var mineralIndex = minerals.indexOf(mineralName);

    if (mineralIndex === -1) {
        replier.reply(name + '님, 올바른 광물 이름을 입력해주세요.');
        return;
    }

    var amount = parseInt(amountStr);

    if (isNaN(amount) || amount <= 0) {
        replier.reply(name + '님, 올바른 수량을 입력해주세요.');
        return;
    }

     if (player.minerals[mineralIndex] < amount) {
         replier.reply(name + '님, 보유한 ' +
                       mineralName +
                       '의 수량이 부족합니다.');
         return;
     }

     var value = amount * (mineralIndex + 1) * 10;

     player.minerals[mineralIndex] -= amount;

     player.money += value;

     replier.reply(name +
                   '님이 ' +
                   mineralName +
                   ' ' +
                   amount +
                   '개를 $' +
                   value.toLocaleString() +
                   '에 판매했습니다.');
}

function sellAllMinerals(name, replier){
   if (!players[name]) { 
       replier.reply(name+'님 먼저 !시작 명령어로 게임을 시작해주세요.');
       return; 
   } 

   var player = players[name]; 
   var totalValue = 0; 
   var soldItems = ''; 

   for(var i = 0; i < minerals.length; i++){ 
       if(player.minerals[i] > 0){ 
           var value = player.minerals[i] * (i + 1) * 10; 
           totalValue += value; 
           soldItems += minerals[i] + ' ' + player.minerals[i] + '개 ($' + value.toLocaleString() + '), '; 
           player.minerals[i] = 0; 
       } 
   } 

   if(totalValue > 0){ 
       player.money += totalValue; 
       replier.reply(name + '님 모든 광물을 판매했습니다! \n' + soldItems.slice(0, -2) + '\n총 판매액: $' + totalValue.toLocaleString()); 
   } else { 
       replier.reply(name + '님 판매할 광물이 없습니다.'); 
   } 
}

function showRanking(replier) { 
   var ranking = Object.keys(players).map(function(name) {
       return {name: name, experience: players[name].experience};
   });
   ranking.sort(function(a, b) { return b.experience - a.experience; });

   var rankingText = '경험치 랭킹 (상위 5명)\n';
   for(var i = 0; i < Math.min(5, ranking.length); i++){
       rankingText += (i+1) + '. ' + ranking[i].name + ' - ' + ranking[i].experience.toLocaleString() + ' XP\n';
   }

   replier.reply(rankingText); 
}

function showMineralList(replier) { 
   var mineralList = '광물 목록:\n';
   for(var i = 0; i < minerals.length; i++){
       mineralList += (i+1) + '. ' + minerals[i] + '\n';
   }

   replier.reply(mineralList); 
}

function showToolList(replier){ 
   var toolList = '도구 목록:\n';
   for(var i = 0; i < tools.length; i++){
       toolList += (i+1) + '. ' + tools[i] + ' (비용: $' + toolCosts[i].toLocaleString() + ')\n';
   }

   replier.reply(toolList); 
}

function dailyReward(name, replier){ 
   if(!players[name]){
       replier.reply(name + '님 먼저 !시작 명령어로 게임을 시작해주세요.');
       return;
   } 

   var player = players[name];
   var now = new Date(); 

   if(player.lastDaily && now - player.lastDaily < 24 * 60 * 60 * 1000){ 
       var remainingTime = 24 * 60 * 60 * 1000 - (now - player.lastDaily); 
       var hours = Math.floor(remainingTime / (60 * 60 * 1000)); 
       var minutes = Math.floor((remainingTime % (60 * 60 * 1000)) / (60 * 1000)); 

       replier.reply(name + '님 일일 보상을 이미 받았습니다. ' + hours + '시간 ' + minutes + '분 후에 다시 받을 수 있습니다.');
       return;
   } 

   var reward = Math.floor(Math.random() * 901) + 100;
   player.money += reward;
   player.lastDaily = now;

   replier.reply(name + '님 일일 보상으로 $' + reward.toLocaleString() + '를 받았습니다!');
}

function explore(name, replier) {
    if (!players[name]) {
        replier.reply(name + '님 먼저 !시작 명령어로 게임을 시작해주세요.');
        return;
    }
    
    var player = players[name];
    var exploreResult = '';
    var expGained = 0;

    // 50% 확률로 특별한 광물을 발견
    if (Math.random() < 0.5) {
        var specialMineralIndex = Math.floor(Math.random() * (minerals.length - player.toolLevel)) + player.toolLevel;
        var amount = Math.floor(Math.random() * 3) + 1;
        player.minerals[specialMineralIndex] += amount;
        exploreResult += minerals[specialMineralIndex] + ' ' + amount + '개를 발견했습니다!\n';
        expGained += amount * (specialMineralIndex + 1) * 2;
    }

    // 30% 확률로 돈을 발견
    if (Math.random() < 0.3) {
        var moneyFound = Math.floor(Math.random() * 901) + 100; // 100 ~ 1000 사이의 랜덤 금액
        player.money += moneyFound;
        exploreResult += '$' + moneyFound.toLocaleString() + '를 발견했습니다!\n';
    }

    player.experience += expGained;

    if (exploreResult === '') {
        replier.reply(name + '님의 탐험에서 아무것도 발견하지 못했습니다. 다음에 다시 시도해보세요!');
    } else {
        replier.reply(name + '님의 탐험 결과:\n' + exploreResult + '경험치 ' + expGained + ' 획득!');
    }
}

var recipes = {
    "강화된 곡괭이": {materials: {"철": 10, "금": 5}, bonusLevel: 1},
    "빛나는 곡괭이": {materials: {"다이아몬드": 5, "에메랄드": 5}, bonusLevel: 2},
    "전설의 곡괭이": {materials: {"미스릴": 3, "룬": 1}, bonusLevel: 3}
};

function craft(name, itemName, replier) {
    if (!players[name]) {
        replier.reply(name + "님 먼저 !시작 명령어로 게임을 시작해주세요.");
        return;
    }
    var player = players[name];
    var recipe = recipes[itemName];
    if (!recipe) {
        replier.reply(name + "님 올바른 아이템 이름을 입력해주세요.");
        return;
    }
    for (var material in recipe.materials) {
        var requiredAmount = recipe.materials[material];
        var playerAmount = player.minerals[minerals.indexOf(material)];
        if (playerAmount < requiredAmount) {
            replier.reply(name + "님 " + material + "이(가) 부족합니다. (필요: " + requiredAmount + ", 보유: " + playerAmount + ")");
            return;
        }
    }
    for (var material in recipe.materials) {
        player.minerals[minerals.indexOf(material)] -= recipe.materials[material];
    }
    player.toolLevel += recipe.bonusLevel;
    replier.reply(name + "님, " + itemName + "을(를) 제작했습니다! 도구 레벨이 " + recipe.bonusLevel + " 증가했습니다.");
}

var quests = [
    {name: "초보 광부", description: "광물 100개 채굴하기", reward: 1000, check: function(player) { return player.minerals.reduce(function(a, b) { return a + b; }, 0) >= 100; }},
    {name: "부자 광부", description: "$10,000 모으기", reward: 5000, check: function(player) { return player.money >= 10000; }},
    {name: "숙련된 광부", description: "경험치 10,000 달성하기", reward: 10000, check: function(player) { return player.experience >= 10000; }}
];

function showQuests(name, replier) {
    if (!players[name]) {
        replier.reply(name + "님 먼저 !시작 명령어로 게임을 시작해주세요.");
        return;
    }
    var player = players[name];
    var questStatus = "퀘스트 목록:\n";
    for (var i = 0; i < quests.length; i++) {
        var quest = quests[i];
        var status = quest.check(player) ? "완료" : "진행 중";
        questStatus += quest.name + ": " + quest.description + " - " + status + "\n";
        if (status === "완료" && player.completedQuests.indexOf(quest.name) === -1) {
            player.money += quest.reward;
            player.completedQuests.push(quest.name);
            questStatus += "  보상 $" + quest.reward.toLocaleString() + " 지급 완료!\n";
        }
    }
    replier.reply(questStatus);
}

function showHelp(replier) {
    var help = "광질 게임 도움말\n";
    help += "!시작 : 게임을 시작합니다.\n";
    help += "!광질 : 광물을 캡니다.\n";
    help += "!상태 : 현재 상태를 확인합니다.\n";
    help += "!업그레이드 : 도구를 업그레이드합니다.\n";
    help += "!판매 [광물] [수량] : 특정 광물을 판매합니다.\n";
    help += "!판매 모두 : 모든 광물을 판매합니다.\n";
    help += "!랭킹 : 경험치 랭킹을 확인합니다.\n";
    help += "!광물목록 : 광물 목록을 확인합니다.\n";
    help += "!도구목록 : 도구 목록을 확인합니다.\n";
    help += "!일일보상 : 일일 보상을 받습니다.\n";
    help += "!탐험 : 특별한 광물이나 돈을 찾습니다.\n";
    help += "!제작 [아이템명] : 특별한 도구를 제작합니다.\n";
    help += "!퀘스트 : 퀘스트 목록과 진행 상황을 확인합니다.\n";
    help += "!도움말 : 이 도움말을 표시합니다.";
    replier.reply(help);
}
