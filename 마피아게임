var games = {};

function Game() {
    this.players = [];
    this.mafia = [];
    this.doctor = null;
    this.police = null;
    this.gameState = "대기중";
    this.nightActions = {};
    this.voteCounts = {};
    this.dayCount = 0;
}

function response(room, msg, sender, isGroupChat, replier) {
    if (!games[room]) {
        games[room] = new Game();
    }
    
    var game = games[room];

    if (msg === "!마피아 시작") {
        startGame(room, replier);
    } else if (msg.startsWith("!참가 ")) {
        joinGame(room, msg.split(" ")[1], replier);
    } else if (msg === "!게임 시작" && game.gameState === "대기중") {
        if (game.players.length >= 4) {
            assignRoles(room, replier);
        } else {
            replier.reply("최소 4명의 플레이어가 필요합니다.");
        }
    } else if (game.gameState === "밤" && msg.startsWith("!행동 ")) {
        nightAction(room, sender, msg.split(" ")[1], replier);
    } else if (game.gameState === "낮" && msg.startsWith("!투표 ")) {
        vote(room, sender, msg.split(" ")[1], replier);
    }
}

function startGame(room, replier) {
    games[room] = new Game();
    replier.reply("마피아 게임이 시작되었습니다. '!참가 이름'으로 게임에 참여하세요.");
}

function joinGame(room, name, replier) {
    var game = games[room];
    if (game.gameState !== "대기중") {
        replier.reply("게임이 이미 진행 중입니다.");
        return;
    }
    if (game.players.indexOf(name) === -1) {
        game.players.push(name);
        replier.reply(name + "님이 게임에 참여했습니다. 현재 " + game.players.length + "명");
    } else {
        replier.reply("이미 참가한 이름입니다.");
    }
}

function assignRoles(room, replier) {
    var game = games[room];
    var mafiaCount = Math.floor(game.players.length / 4);
    var shuffled = game.players.slice().sort(() => 0.5 - Math.random());
    
    game.mafia = shuffled.slice(0, mafiaCount);
    game.doctor = shuffled[mafiaCount];
    game.police = shuffled[mafiaCount + 1];
    
    game.gameState = "밤";
    game.dayCount = 1;
    
    for (var i = 0; i < game.players.length; i++) {
        var role = "시민";
        if (game.mafia.indexOf(game.players[i]) !== -1) role = "마피아";
        else if (game.players[i] === game.doctor) role = "의사";
        else if (game.players[i] === game.police) role = "경찰";
        
        // 실제 게임에서는 개인 메시지로 역할을 알려주어야 합니다.
        replier.reply(game.players[i] + "님의 역할: " + role);
    }
    
    replier.reply("게임이 시작되었습니다. 밤이 되었습니다.");
    replier.reply("마피아는 죽일 사람을, 의사는 살릴 사람을, 경찰은 조사할 사람을 선택하세요.");
    replier.reply("'!행동 이름' 형식으로 선택하세요.");
}

function nightAction(room, player, target, replier) {
    var game = games[room];
    if (game.mafia.indexOf(player) !== -1 || player === game.doctor || player === game.police) {
        game.nightActions[player] = target;
        replier.reply(player + "님의 행동이 기록되었습니다.");
        
        if (Object.keys(game.nightActions).length === game.mafia.length + 2) {
            resolveNight(room, replier);
        }
    }
}

function resolveNight(room, replier) {
    var game = games[room];
    var killed = null;
    var saved = null;
    var investigated = null;
    
    for (var player in game.nightActions) {
        if (game.mafia.indexOf(player) !== -1) {
            killed = game.nightActions[player];
        } else if (player === game.doctor) {
            saved = game.nightActions[player];
        } else if (player === game.police) {
            investigated = game.nightActions[player];
        }
    }
    
    if (killed !== saved) {
        game.players = game.players.filter(p => p !== killed);
        replier.reply(killed + "님이 밤에 사망했습니다.");
    } else {
        replier.reply("아무도 사망하지 않았습니다.");
    }
    
    if (game.police && investigated) {
        var role = game.mafia.indexOf(investigated) !== -1 ? "마피아" : "마피아가 아님";
        // 실제 게임에서는 경찰에게만 개인 메시지로 알려주어야 합니다.
        replier.reply("경찰 조사 결과: " + investigated + "님은 " + role + "입니다.");
    }
    
    game.gameState = "낮";
    game.dayCount++;
    game.nightActions = {};
    game.voteCounts = {};
    
    replier.reply("낮이 되었습니다. 토론 후 투표를 진행합니다.");
    replier.reply("'!투표 이름' 형식으로 투표하세요.");
}

function vote(room, voter, target, replier) {
    var game = games[room];
    if (game.players.indexOf(voter) !== -1 && game.players.indexOf(target) !== -1) {
        game.voteCounts[target] = (game.voteCounts[target] || 0) + 1;
        replier.reply(voter + "님이 " + target + "님에게 투표했습니다.");
        
        if (Object.keys(game.voteCounts).length === game.players.length) {
            executeVote(room, replier);
        }
    }
}

function executeVote(room, replier) {
    var game = games[room];
    var maxVotes = 0;
    var executed = null;
    
    for (var player in game.voteCounts) {
        if (game.voteCounts[player] > maxVotes) {
            maxVotes = game.voteCounts[player];
            executed = player;
        }
    }
    
    if (executed) {
        game.players = game.players.filter(p => p !== executed);
        replier.reply(executed + "님이 처형되었습니다.");
    } else {
        replier.reply("동점으로 아무도 처형되지 않았습니다.");
    }
    
    checkGameEnd(room, replier);
}

function checkGameEnd(room, replier) {
    var game = games[room];
    var mafiaCount = game.mafia.filter(m => game.players.indexOf(m) !== -1).length;
    var citizenCount = game.players.length - mafiaCount;
    
    if (mafiaCount === 0) {
        replier.reply("시민 팀이 승리했습니다!");
        delete games[room];
    } else if (mafiaCount >= citizenCount) {
        replier.reply("마피아 팀이 승리했습니다!");
        delete games[room];
    } else {
        game.gameState = "밤";
        replier.reply("밤이 되었습니다. 각자의 역할을 수행하세요.");
    }
}
