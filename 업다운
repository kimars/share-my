var gameState = {};

function response(room, msg, sender, isGroupChat, replier) {
    if (msg.startsWith('.업다운')) {
        var difficulty = msg.split(' ')[1];
        if (difficulty === '상' || difficulty === '중' || difficulty === '하') {
            startGame(room, difficulty, replier);
        } else {
            replier.reply("난이도를 '.업다운 상', '.업다운 중', 또는 '.업다운 하' 형식으로 입력해주세요.");
        }
    } else if (msg.startsWith('.')) {
        var guess = parseInt(msg.substring(1));
        if (!isNaN(guess)) {
            checkGuess(room, guess, replier);
        }
    }
}

function startGame(room, difficulty, replier) {
    var maxNumber;
    var attempts;
    
    if (difficulty === '상') {
        maxNumber = 100;
        attempts = 5;
    } else if (difficulty === '중') {
        maxNumber = 50;
        attempts = 7;
    } else {
        maxNumber = 20;
        attempts = 10;
    }
    
    gameState[room] = {
        number: Math.floor(Math.random() * maxNumber) + 1,
        attempts: attempts,
        maxNumber: maxNumber
    };
    
    replier.reply("업다운 게임을 시작합니다! 1부터 " + maxNumber + " 사이의 숫자를 맞춰보세요.\n남은 기회: " + attempts + "번");
}

function checkGuess(room, guess, replier) {
    if (!gameState[room]) {
        replier.reply("게임이 시작되지 않았습니다. '.업다운 난이도'로 게임을 시작해주세요.");
        return;
    }
    
    var game = gameState[room];
    game.attempts--;
    
    if (guess === game.number) {
        replier.reply("정답입니다! 숫자는 " + game.number + "였습니다.");
        delete gameState[room];
    } else if (game.attempts === 0) {
        replier.reply("게임 오버! 정답은 " + game.number + "였습니다.");
        delete gameState[room];
    } else if (guess < game.number) {
        replier.reply("Up! 더 큰 숫자입니다.\n남은 기회: " + game.attempts + "번");
    } else {
        replier.reply("Down! 더 작은 숫자입니다.\n남은 기회: " + game.attempts + "번");
    }
}
